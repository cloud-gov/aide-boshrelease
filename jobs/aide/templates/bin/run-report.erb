#!/bin/bash

set -x

JOB_DIR=/var/vcap/jobs/aide
PACKAGE_DIR=/var/vcap/packages/aide
LOGFILE=/var/vcap/sys/log/aide/report.log

source ${JOB_DIR}/bin/lock-functions

initialize_lock

flock -x -w 120 ${LOCKFD} -c "$PACKAGE_DIR/bin/aide --check" > report.txt
# aide exits nonzero when it finds a modification, so wait until here to set -e
set -e
date >> ${LOGFILE}
cat report.txt >> ${LOGFILE}
echo "=============================================" >> ${LOGFILE}

# report has lines like:
#           Added entries:     74
added=$(grep 'Added entries:' report.txt | awk '{ print $3 }')
if [[ -z "${added}" ]]; then
    added=0
fi
removed=$(grep 'Removed entries:' report.txt | awk '{ print $3 }')
if [[ -z "${removed}" ]]; then
    removed=0
fi

# New logic for calculating changed entries
# Initialize the changed variable
changed=0

# Define the allowed files
allowed_files=(
    "/etc/group-"
    "/etc/gshadow-"
    "/etc/passwd-"
    "/etc/shadow-"
    "/etc/subgid-"
    "/etc/subuid-"
    "/etc/group"
    "/etc/gshadow"
    "/etc/passwd"
    "/etc/shadow"
    "/etc/subgid"
    "/etc/subuid"
)

# Extract the number of changed entries
changed_entries=$(grep "Changed entries:" report.txt | grep -v "^Changed entries:$" | awk '{print $3}')
echo "Changed entries found by aide --check: ${changed_entries}"

# Check if changed_entries is empty or not a number
if [ -z "$changed_entries" ] || ! [[ "$changed_entries" =~ ^[0-9]+$ ]]; then
    # If we can't extract a valid number, default to 0
    echo "Error: Could not extract valid number of changed entries"
    changed=0
else
    # If changed entries is 0, set changed=0
    if [ "$changed_entries" -eq 0 ]; then
        changed=0
    else
        # Extract the list of changed files
        changed_files=$(awk '
            /^Changed entries:$/ { in_section = 1; next }
            in_section && /^f > / { 
                # Extract filename after the colon and space
                idx = index($0, ": ")
                if (idx > 0) {
                    filename = substr($0, idx + 2)
                    # Remove any trailing whitespace or special characters
                    gsub(/[[:space:]]+$/, "", filename)
                    print filename
                }
            }
            in_section && /^---/ && prev_line ~ /^$/ { exit }
            { prev_line = $0 }
        ' report.txt)
        # Print the changed files (one per line for visibility)
        echo "Changed files:"
        echo "$changed_files"

        # Check if any changed files are outside the allowed list
        files_outside_list=false
        while IFS= read -r file; do
            if [ -n "$file" ]; then
                is_allowed=false
                for allowed in "${allowed_files[@]}"; do
                    if [ "$file" = "$allowed" ]; then
                        is_allowed=true
                        break
                    fi
                done
                if [ "$is_allowed" = false ]; then
                    echo "File outside allowed list: $file"
                    files_outside_list=true
                    break
                fi
            fi
        done <<< "$changed_files"

        # If there are files outside the allowed list, set changed to the number of changed entries
        if [ "$files_outside_list" = true ]; then
            echo "There were changes outside of the allowed list..."
            changed=$changed_entries
        else
             echo "All file changes are in the allowed list, checking diffs..."
            # All files are in the allowed list, now check diffs for bosh_ differences
            # Group the files into pairs (base and dash versions)
            base_files=(
                "/etc/group"
                "/etc/gshadow"
                "/etc/passwd"
                "/etc/shadow"
                "/etc/subgid"
                "/etc/subuid"
            )
            
            for base_file in "${base_files[@]}"; do
                dash_file="${base_file}-"
                
                # Check if both files exist in the changed files list
                if echo "$changed_files" | grep -q "^${base_file}$" || echo "$changed_files" | grep -q "^${dash_file}$"; then
                    echo "Checking diff for $base_file and $dash_file"
                    # Check if both files exist on the system
                    if [ -f "$base_file" ] && [ -f "$dash_file" ]; then
                        # Perform diff and check for non-bosh_ differences
                        set +e
                        diff_output=$(diff "$dash_file" "$base_file" 2>/dev/null || true)
                        # Check if there are any differences that don't contain "bosh_"
                        if [ -n "$diff_output" ]; then
                            non_bosh_diff=$(echo "$diff_output" | grep -v "bosh_" | grep -E "^[<>]")
                            if [ -n "$non_bosh_diff" ]; then
                                echo "Found non-bosh_ differences in $base_file"
                                ((changed++))
                            else
                                echo "diff had a bosh_ reference in $base_file"
                            fi
                        fi
                        set -e
                    else
                        # If files don't exist for diff, count it as a change
                        echo "Warning: Cannot diff $base_file and $dash_file - one or both files missing"
                        ((changed++))
                    fi
                fi
            done
        fi
    fi
fi

echo 'aide_violation_count {action="added"}' ${added} > aide.prom
echo 'aide_violation_count {action="removed"}' ${removed} >> aide.prom
echo 'aide_violation_count {action="changed"}' ${changed} >> aide.prom

mv aide.prom /var/vcap/jobs/node_exporter/config/aide.prom

rm report.txt

touch /var/vcap/data/aide/report-ran
